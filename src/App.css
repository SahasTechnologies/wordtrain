#root {
  max-width: 1280px;
  margin: 0 auto;
  padding: 2rem;
  text-align: left; /* left align content */
}

.logo {
  height: 6em;
  padding: 1.5em;
  will-change: filter;
  transition: filter 300ms;
}
.logo:hover {
  filter: drop-shadow(0 0 2em #646cffaa);
}
.logo.react:hover {
  filter: drop-shadow(0 0 2em #61dafbaa);
}

@keyframes logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@media (prefers-reduced-motion: no-preference) {
  a:nth-of-type(2) .logo {
    animation: logo-spin infinite 20s linear;
  }
}

.card {
  padding: 2em;
}

/* Word Train styles */
.container {
  max-width: 800px; /* Use more space */
  margin: 2rem auto;
  padding: 1rem;
  position: relative;
}

h1 {
  text-align: center;
  margin-bottom: 2rem;
}

.sources {
  text-align: center;
  font-size: 0.85rem;
  color: #888;
  margin-top: -1rem;
  margin-bottom: 1rem;
}

.panel {
  background-color: var(--surface);
  border: 1px solid var(--border);
  border-radius: 8px;
  padding: 1.5rem;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  transition: background-color 0.2s, border-color 0.2s;
}

.setup-grid {
  display: grid;
  gap: 1.25rem;
  grid-template-columns: 1fr;
}
@media (min-width: 900px) {
  .setup-grid {
    grid-template-columns: 1fr; /* always rows */
  }
}

.row {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 1rem;
}

.row span {
  font-weight: 500;
}

input {
  font-family: inherit; /* Use Red Hat Text font */
  padding: 0.5rem;
  border: 1px solid var(--border);
  background-color: var(--background);
  color: var(--text);
  border-radius: 4px;
  font-size: 1rem;
  width: 80px;
  text-align: center; /* Center the number inputs */
}

/* Specifically target the word input to be left-aligned */
.input-row input {
  text-align: left;
}

.actions {
  display: flex;
  justify-content: flex-end;
  gap: 0.5rem;
  margin-top: 1.5rem;
  border-top: 1px solid var(--border);
  padding-top: 1.5rem;
}

.actions.no-border {
  border-top: none;
  padding-top: 0;
}

.actions .divider {
  width: 1px;
  background: var(--border);
  align-self: stretch;
  margin: 0 6px;
}

button {
  padding: 0.6rem 1rem;
  border: 1px solid transparent;
  border-radius: 4px;
  background-color: var(--accent);
  color: var(--accent-text);
  font-size: 1rem;
  cursor: pointer;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  transition: opacity 0.2s;
}

button:hover {
  opacity: 0.85;
}

button:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

/* Secondary button style */
button.secondary {
  background-color: var(--surface);
  color: var(--text);
  border-color: var(--border);
}

.hint {
  font-size: 0.8rem;
  color: #888;
  text-align: center;
  margin-top: 1rem;
}

.players-list {
  list-style: none;
  padding: 0;
  margin: 0;
}

.player-row {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem;
  border-radius: 4px;
  background-color: var(--background);
  margin-bottom: 0.5rem;
}

.player-row.sortable {
  cursor: grab;
}

.player-row.drag-overlay {
  box-shadow: 0 4px 12px rgba(0,0,0,0.2);
}

.player-row[data-dragging='true'] {
  opacity: 0.5;
}

.drag-handle {
  cursor: grab;
  color: #888;
}

.player-row .name {
  flex-grow: 1;
  width: auto;
  text-align: left;
  background-color: transparent;
  border: 1px solid transparent;
}

.player-row .name:focus {
  background-color: var(--surface);
  border-color: var(--accent);
}

.bot-pill {
  font-size: 0.8rem;
  padding: 0.2rem 0.5rem;
  border-radius: 12px;
  background-color: var(--border);
  color: var(--text);
  display: inline-flex;
  align-items: center;
  gap: 4px;
}

/* Icon-only button */
.icon-button {
  background: transparent;
  border: 1px solid var(--border);
  color: var(--text);
  padding: 2px 6px;
  height: 28px;
  min-width: 28px;
  display: inline-flex;
  align-items: center;
  justify-content: center;
}
.icon-button:hover {
  background: var(--surface);
}

.status {
  display: flex;
  justify-content: space-between;
  margin-bottom: 1rem;
  padding-bottom: 1rem;
  border-bottom: 1px solid var(--border);
}

.order {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
  margin-bottom: 1rem;
}

.player-pill {
  padding: 0.3rem 0.7rem;
  border-radius: 16px;
  background-color: var(--surface);
  border: 1px solid var(--border);
  font-size: 0.9rem;
  display: inline-flex;
  align-items: center;
  gap: 6px;
}

.player-pill.current {
  background-color: var(--accent);
  color: var(--accent-text);
  font-weight: bold;
  border-color: var(--accent);
}

.input-row {
  display: flex;
  gap: 0.5rem;
  margin: 1.5rem 0;
}

.input-row input {
  flex-grow: 1;
  width: auto;
  text-align: left;
}

.error {
  color: var(--error);
  margin: 1rem 0;
  font-weight: 500;
}

.history {
  margin-top: 1.5rem;
}

.history h3 {
  margin-top: 0;
}

.history ol {
  list-style: decimal;
  list-style-position: inside; /* prevent numbers from being cut off */
  padding-left: 0;
  margin: 0;
  max-height: 400px;
  overflow-y: auto;
}

.history li {
  padding: 0.5rem;
  border-bottom: 1px solid var(--border);
}

.history li:last-child {
  border-bottom: none;
}

.history li strong {
  color: var(--accent);
}

.definition {
  font-size: 0.85rem;
  color: #888;
  margin-top: 0.25rem;
  padding-left: 1rem;
}

.gameover {
  text-align: center;
  padding: 2rem 0;
}

/* Rules panel */
.rules {
  margin: 0.75rem 0 1rem 0;
  padding: 0.75rem;
  background: var(--background);
  border: 1px solid var(--border);
  border-radius: 6px;
}
.rule-row {
  display: flex;
  align-items: center;
  gap: 8px;
  margin-bottom: 0.5rem;
}
.rule-row select,
.rule-row input[type="text"],
.rule-row input[type="number"] {
  background: var(--surface);
  color: var(--text);
  border: 1px solid var(--border);
  border-radius: 4px;
  padding: 4px 6px;
}

.player-mode-select {
  background: var(--surface);
  color: var(--text);
  border: 1px solid var(--border);
  border-radius: 4px;
  padding: 4px 6px;
}

/* Saved games list */
.saved-list {
  max-height: 260px;
  overflow-y: auto;
}
.saved-card {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 12px;
  padding: 0.6rem 0.75rem;
  background: var(--background);
  border: 1px solid var(--border);
  border-radius: 6px;
  margin-bottom: 0.5rem;
}
.saved-info {
  display: flex;
  flex-direction: column;
}
.saved-title {
  font-weight: 600;
}
.saved-sub {
  font-size: 0.85rem;
  color: #888;
}
.saved-actions {
  display: flex;
  gap: 6px;
}

.theme-toggle {
  position: absolute;
  top: 0;
  right: 0;
  background: transparent;
  border: none;
  color: var(--text);
  cursor: pointer;
  padding: 8px;
}

.theme-toggle:hover {
  opacity: 0.7;
}

/* Spinner animation for Loader2 icon */
.spin {
  animation: spin 1s linear infinite;
}

@keyframes spin {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

/* Select styling to match theme */
select {
  font-family: inherit;
  padding: 0.5rem;
  border: 1px solid var(--border);
  background-color: var(--background);
  color: var(--text);
  border-radius: 4px;
}

/* Custom checkbox styles */
.checkbox-wrapper-30 .checkbox {
  --bg: #fff;
  --brdr: #d1d6ee;
  --brdr-actv: #1e2235;
  --brdr-hovr: #bbc1e1;
  --dur: calc((var(--size, 2)/2) * 0.6s);
  display: inline-block;
  width: calc(var(--size, 1) * 22px);
  position: relative;
}
.checkbox-wrapper-30 .checkbox:after {
  content: "";
  width: 100%;
  padding-top: 100%;
  display: block;
}
.checkbox-wrapper-30 .checkbox > * {
  position: absolute;
}
.checkbox-wrapper-30 .checkbox input {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  -webkit-tap-highlight-color: transparent;
  cursor: pointer;
  background-color: var(--bg);
  border-radius: calc(var(--size, 1) * 4px);
  border: calc(var(--newBrdr, var(--size, 1)) * 1px) solid;
  color: var(--newBrdrClr, var(--brdr));
  outline: none;
  margin: 0;
  padding: 0;
  transition: all calc(var(--dur) / 3) linear;
}
.checkbox-wrapper-30 .checkbox input:hover,
.checkbox-wrapper-30 .checkbox input:checked {
  --newBrdr: calc(var(--size, 1) * 2);
}
.checkbox-wrapper-30 .checkbox input:hover {
  --newBrdrClr: var(--brdr-hovr);
}
.checkbox-wrapper-30 .checkbox input:checked {
  --newBrdrClr: var(--brdr-actv);
  transition-delay: calc(var(--dur) / 1.3);
}
.checkbox-wrapper-30 .checkbox input:checked + svg {
  --dashArray: 16 93;
  --dashOffset: 109;
}
.checkbox-wrapper-30 .checkbox svg {
  fill: none;
  left: 0;
  pointer-events: none;
  stroke: var(--stroke, var(--border));
  stroke-dasharray: var(--dashArray, 93);
  stroke-dashoffset: var(--dashOffset, 94);
  stroke-linecap: round;
  stroke-linejoin: round;
  stroke-width: 2px;
  top: 0;
  transition: stroke-dasharray var(--dur), stroke-dashoffset var(--dur);
}
.checkbox-wrapper-30 .checkbox svg,
.checkbox-wrapper-30 .checkbox input {
  display: block;
  height: 100%;
  width: 100%;
}

/* Per-player rules inline block */
.player-rules-li {
  list-style: none;
  margin: -0.25rem 0 0.5rem 2.25rem; /* indent under row */
}
